/**
 * CLToken.h
 * CalculationKit
 *
 * Copyright Â© 2019 WebView, Lab.
 * All rights reserved.
 */

#import <CalculationKit/CLBase.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum CLTokenType
 * @abstract Declares the possible types of token (including type CLTokenTypeUnknown that is not
 		supported is the error identifier). These types are assigned to the token when the token is
 		initialized.
 
 * @see CLToken.constant
 * @see CLToken.variable
 * @see CLTokenizer
 */
typedef NS_ENUM(NSInteger, CLTokenType) {
	CLTokenTypeDecimal = 0, // A number, e.g. '10.2'.
	CLTokenTypeConstant, // A constant number, e.g. pi.
	CLTokenTypeVariable, // A variable, e.g. 'y'.
	CLTokenTypeOperation, // A binary operation, e.g. +.
	CLTokenTypePrefixFunction, // A prefix function, e.g. sin().
	CLTokenTypePostfixFunction, // Postfix function, e.g. factorial.
	CLTokenTypeOpeningBrace, // Opening bracket (.
	CLTokenTypeClosingBrace, // Closing bracket ).
	CLTokenTypeSeparator, // Function argument delimiter, comma.
	
	CLTokenTypeUnknown = -1, // Undefined token, not supported.
};

/**
 * @class CLToken
 * @abstract Expression token. Contains information about the token, its string display, and numeric
 		(if applicable).
 */
@interface CLToken : NSObject

/**
 * @property name
 * @abstract A unique name for the token that clearly identifies it in the tokenized expression or
 		expression tree. Generated by the tokenizer and assigned at initialization.
 */
@property (readonly, nonatomic, copy) NSString *name;

/**
 * @property stringValue
 * @abstract String display of the token. It is obtained from the input string, the token stores this
 		value, which will later be used by the calculator for calculations.
 * @see CLCalculator
 */
@property (readonly, nonatomic, copy) NSString *stringValue;

/**
 * @property type
 * @abstract Token type. All types are defined in the CLTokenType enumeration. The token type is
 		assigned by the tokenizer and is the main property of the class that is used in the calculation.
 * @see CLTokenType
 */
@property (readonly, nonatomic) CLTokenType type;

/**
 * @property constant
 * @abstract Numerical value of the token. Used if the token type is numeric. In all other cases it is -1.
 * @see CLTokenType.CLTokenTypeDecimal
 * @see CLTokenType.CLTokenTypeConstant
 */
@property (readonly, nonatomic) CGFloat constant;

/**
 * @property variable
 * @abstract String display of the variable. Used if the token type is a variable. In all other cases,
 		the value is nil.
 */
@property (readonly, nonatomic, nullable) NSString *variable;

/**
 * @abstract Assigned to the class constructor. Returns a ready-to-use instance of
		the class with property initialization.
 * @param name The unique name of the token.
 * @param type The type of token declared in the CLTokenType enumeration.
 * @param aString String representation of the token.
 */
- (instancetype)initWithName:(NSString *)name type:(CLTokenType)type stringValue:(NSString *)aString NS_DESIGNATED_INITIALIZER;
+ (instancetype)tokenWithName:(NSString *)name type:(CLTokenType)type stringValue:(NSString *)aString;

- (instancetype)init NS_UNAVAILABLE; // Not support.

@end

NS_ASSUME_NONNULL_END
